{"version":3,"sources":["data.js","Answers.js","Questions.js","App.js","reportWebVitals.js","index.js"],"names":["questions","Answers","props","ans","map","Typography","Questions","state","showAnswer","num","ansBtnText","flipBtnTextHandler","setState","showAnswerHandler","showAns","loadNextQuestionHanlder","currentNum","loadPrevQuestionHanlder","loadRandomQuestionHanlder","Math","floor","random","classes","this","Card","className","root","CardContent","title","color","gutterBottom","Box","fontWeight","fontSize","question","q","CardActions","Button","variant","size","onClick","a","Component","withStyles","theme","width","justifyContent","alignContent","bullet","display","margin","transform","pos","marginBottom","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5ece5cd.chunk.js","sourcesContent":["export const questions = [\n    {\n        \"id\": 1,\n        \"q\": \"What is the supreme law of the land?\",\n        \"a\": [\". the Constitution\"]\n    },\n    {\n        \"id\": 2,\n        \"q\": \"What does the Constitution do?\",\n        \"a\": [\". sets up the government\",\". defines the government\",\". protects basic rights of Americans\"]\n    },\n    {\n        \"id\": 3,\n        \"q\": \"The idea of self-government is in the first three words of the Constitution. What are these words?\",\n        \"a\": [\". We the People\"]\n    },\n\n]","import React from \"react\";\n\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Answers = (props) => {\n  return (\n    <div>\n        {props.ans.map((ans) => (\n          <Typography>{ans}</Typography>\n        ))}\n    </div>\n  );\n};\n\nexport default Answers;\n","import { render } from \"@testing-library/react\";\nimport React, { Component } from \"react\";\nimport { questions } from \"./data\";\nimport Answers from \"./Answers\";\n\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { FormatBold } from \"@material-ui/icons\";\n\nconst useStyles = (theme) => ({\n  root: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 10,\n  },\n  question: {\n    fontSize: 16,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nclass Questions extends Component {\n  state = {\n    showAnswer: false,\n    num: 0,\n    ansBtnText: \"Show Answer\"\n  };\n\n  flipBtnTextHandler = () => {\n    this.state.showAnswer ? this.setState({ansBtnText: \"Show Answer\"}) : this.setState({ansBtnText: \"Hide Answer\"});\n  }\n\n  showAnswerHandler = () => {\n    let showAns = this.state.showAnswer;\n    this.setState({ showAnswer: !showAns });\n    this.flipBtnTextHandler();    \n  }\n\n  loadNextQuestionHanlder = () => {\n    let currentNum = this.state.num;\n    if (currentNum == 2)  {\n      this.setState({ num: 0 });\n    } else {\n      this.setState({ num: currentNum+1 });\n    }\n    if (this.state.showAnswer) {this.showAnswerHandler()}\n  }\n\n  loadPrevQuestionHanlder = () => {\n    let currentNum = this.state.num;\n    if (currentNum == 0)  {\n      this.setState({ num: 2 });\n    } else {\n      this.setState({ num: currentNum-1 });\n    }\n    if (this.state.showAnswer) {this.showAnswerHandler()}\n  }\n\n  loadRandomQuestionHanlder = () => {\n    this.setState({ num: Math.floor(Math.random() * 3) });\n    if (this.state.showAnswer) {this.showAnswerHandler()}\n  }\n\n\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Card className={classes.root}>\n        <CardContent\n          className={classes.title}\n          color=\"textSecondary\"\n          gutterBottom\n        >\n          <Typography>\n            <Box fontWeight=\"fontWeightBold\" fontSize={12}>Question {this.state.num + 1}</Box>\n          </Typography>\n        </CardContent>\n\n        <CardContent\n          className={classes.question}\n          color=\"textSecondary\"\n          gutterBottom\n        >\n          <Typography>{questions[this.state.num].q}</Typography>\n        </CardContent>\n        <CardActions>\n          <Button variant = \"contained\" color=\"default\" size=\"small\" onClick={this.loadPrevQuestionHanlder}>\n            Prev\n          </Button>\n          <Button variant = \"contained\" color=\"default\" size=\"small\" onClick={this.loadNextQuestionHanlder}>\n            Next\n          </Button>\n          <Button variant = \"contained\" color=\"primary\" size=\"small\" onClick={this.loadRandomQuestionHanlder}>\n            Random\n          </Button>\n          <Button variant = \"contained\" color=\"secondary\" size=\"small\" onClick={this.showAnswerHandler}>\n            {this.state.ansBtnText}\n          </Button>\n        </CardActions>\n        <CardContent\n          className={classes.title}\n          color=\"textSecondary\"\n          gutterBottom\n        >\n          <Typography>\n            {this.state.showAnswer ? (\n              <Answers ans={questions[this.state.num].a} />\n            ) : null}\n          </Typography>\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Questions);\n","import './App.css';\nimport Questions from './Questions';\n\nfunction App() {\n  return (\n    <div>\n      <Questions />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}