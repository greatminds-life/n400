{"version":3,"sources":["data.js","Answers.js","Questions.js","App.js","reportWebVitals.js","index.js"],"names":["questions","Answers","props","ans","map","Typography","Questions","state","showAnswer","num","ansBtnText","flipBtnTextHandler","setState","showAnswerHandler","showAns","loadNextQuestionHanlder","currentNum","loadPrevQuestionHanlder","loadRandomQuestionHanlder","Math","floor","random","classes","this","Grid","container","className","grid","xs","spacing","direction","item","Paper","qpaper","Box","fontWeight","fontSize","q","apaper","a","Button","color","size","onClick","Component","withStyles","theme","root","mindWidth","justifyContent","alignContent","bullet","display","margin","transform","title","padding","minWidth","qgrid","mindHeight","question","centerText","textAlign","pos","marginBottom","height","width","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8c7923e.chunk.js","sourcesContent":["export const questions = [\n    {\n        \"id\": 1,\n        \"q\": \"What is the supreme law of the land?\",\n        \"a\": [\". the Constitution\"]\n    },\n    {\n        \"id\": 2,\n        \"q\": \"What does the Constitution do?\",\n        \"a\": [\". sets up the government\",\". defines the government\",\". protects basic rights of Americans\"]\n    },\n    {\n        \"id\": 3,\n        \"q\": \"The idea of self-government is in the first three words of the Constitution. What are these words?\",\n        \"a\": [\". We the People\"]\n    },\n\n]","import React from \"react\";\n\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Answers = (props) => {\n  return (\n    <div>\n        {props.ans.map((ans) => (\n          <Typography>{ans}</Typography>\n        ))}\n    </div>\n  );\n};\n\nexport default Answers;\n","import { render } from \"@testing-library/react\";\nimport React, { Component } from \"react\";\nimport { questions } from \"./data\";\nimport Answers from \"./Answers\";\n\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui//core/Grid\";\nimport Divider from \"@material-ui//core/Divider\";\nimport { sizing } from \"@material-ui/system\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport { FormatBold } from \"@material-ui/icons\";\n\nconst useStyles = (theme) => ({\n  root: {\n    mindWidth: 500,\n    justifyContent: \"center\",\n    alignContent: \"center\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 10,\n  },\n  grid: {\n    padding: 20,\n    alignContent: \"center\",\n    justifyContent: \"center\",\n    minWidth: 500,\n  },\n  qgrid: {\n    mindHeight: 500,\n  },\n  question: {\n    fontSize: 16,\n  },\n  centerText: {\n    textAlign: \"left\",\n    padding: 20,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  qpaper: {\n    height: 150,\n    width: 500,\n    padding: 20,\n  },\n  apaper: {\n    height: 400,\n    width: 500,\n    padding: 20,\n  },\n});\n\nclass Questions extends Component {\n  state = {\n    showAnswer: false,\n    num: 0,\n    ansBtnText: \"Show Answer\",\n  };\n\n  flipBtnTextHandler = () => {\n    this.state.showAnswer\n      ? this.setState({ ansBtnText: \"Show Answer\" })\n      : this.setState({ ansBtnText: \"Hide Answer\" });\n  };\n\n  showAnswerHandler = () => {\n    let showAns = this.state.showAnswer;\n    this.setState({ showAnswer: !showAns });\n    this.flipBtnTextHandler();\n  };\n\n  loadNextQuestionHanlder = () => {\n    let currentNum = this.state.num;\n    if (currentNum == 2) {\n      this.setState({ num: 0 });\n    } else {\n      this.setState({ num: currentNum + 1 });\n    }\n    if (this.state.showAnswer) {\n      this.showAnswerHandler();\n    }\n  };\n\n  loadPrevQuestionHanlder = () => {\n    let currentNum = this.state.num;\n    if (currentNum == 0) {\n      this.setState({ num: 2 });\n    } else {\n      this.setState({ num: currentNum - 1 });\n    }\n    if (this.state.showAnswer) {\n      this.showAnswerHandler();\n    }\n  };\n\n  loadRandomQuestionHanlder = () => {\n    this.setState({ num: Math.floor(Math.random() * 3) });\n    if (this.state.showAnswer) {\n      this.showAnswerHandler();\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container className={classes.grid}>\n        <Grid container xs={12} spacing={2} direction=\"column\">\n          <Grid item>\n            <Paper className={classes.qpaper}>\n              <Typography>\n                <Box fontWeight=\"fontWeightBold\" fontSize={12}>\n                  Question {this.state.num + 1}\n                </Box>\n              </Typography>\n              <Typography>{questions[this.state.num].q}</Typography>\n            </Paper>\n          </Grid>\n          <Grid item>\n            <Paper className={classes.apaper}>\n              <Typography>\n                {this.state.showAnswer ? (\n                  <Answers ans={questions[this.state.num].a} />\n                ) : null}\n              </Typography>\n            </Paper>\n          </Grid>\n\n          {/*           <Card>\n            <CardContent>\n              <Typography>\n                <Box fontWeight=\"fontWeightBold\" fontSize={12}>\n                  Question {this.state.num + 1}\n                </Box>\n              </Typography>\n              <Typography>{questions[this.state.num].q}</Typography>\n              <Divider light />\n              <Typography>\n                {this.state.showAnswer ? (\n                  <Answers ans={questions[this.state.num].a} />\n                ) : null}\n              </Typography>\n            </CardContent>\n          </Card> */}\n        </Grid>\n\n        <Grid container spacing={2} xs={12}>\n          <Grid item>\n            <Button\n              color=\"default\"\n              size=\"small\"\n              onClick={this.loadPrevQuestionHanlder}\n            >\n              Prev\n            </Button>\n          </Grid>\n\n          <Grid item>\n            <Button\n              color=\"default\"\n              size=\"small\"\n              onClick={this.loadNextQuestionHanlder}\n            >\n              Next\n            </Button>\n          </Grid>\n\n          <Grid item>\n            <Button\n              color=\"primary\"\n              size=\"small\"\n              onClick={this.loadRandomQuestionHanlder}\n            >\n              Random\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button\n              color=\"secondary\"\n              size=\"small\"\n              onClick={this.showAnswerHandler}\n            >\n              {this.state.ansBtnText}\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Questions);\n","import './App.css';\nimport Questions from './Questions';\n\nfunction App() {\n  return (\n    <div>\n      <Questions />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}